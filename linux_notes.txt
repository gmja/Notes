Command line basics:

Setup login:
ip addr show - like ipconfig in windows. show the network information
ssh user@host [command]
/etc/ssh_config - global config file
~/.ssh/config - user specific config file
ssh-keygen -t rsa - generate key pairs
~/.ssh/id_rsa - private key
~/.ssh/id_rsa.pub - public key
ssh-copy-id user@host - install public key from ~/id_rsa.pub to /home/USER/authorized_keys on target host

Getting Help:
sudo mandb - build/refresh the manual database
man <command> - pull up manual page
	options in square brackets are optional
whatis <command> - display manual page descriptions
pinfo - top level of the info tree. More in depth version of man.
	pinfo grub 
/usr/share/doc - contains documentation for installed software

Working in Command Line:
home, ctrl+a - begining of line
end, ctrl+e - end of line
alt+b - move back 1 word
alt+f - move forward 1 word
ctrl+k - cursor to eol
ctrl+w - delete word next to cursor
ctrl+y - undo
ctrl+t - swap letters around
ctrl+l - clear screen
alt+c - capitolize word
history - see command history
	!5 - rerun command 5
	!e - rerun most recent command that starts with e
grep - text searching tool
	grep -ir guru /etc - case insensitive search for the word guru inside files /etc folder
locate - search tool for file names
find - search for files in a directory for hierarchy

VIM: 
vimtutor - tutorial for the vim editor
move cursor:
	h - left
	j - down
	k - up
	l - right
ESC - normal mode
:q! - discard changes
x - delete under the cursor
i - insert text
A - append text
:wq - save a file and exit
dw - delete a word, needs to be on the first character of the word
d$ - delete to eol
w - move forward to start of next word
e - move to end of current word
$ - move to end of line
2w - move forward 2 words. can use any count before the motion
dd - delete whole line
u - undo the last command 
U to fix a whole line
ctrl+r - redo
p - put the previously deleted text after the cursor
rx - replace the character at the cursor with x
ce - change to end of a word
ctrl+g - show location in the file and status
gg - move to start of file
G - move to bottom of file
<line number> G - move to specified line
/ <phrase> - search for phrase
	n - next
	N - previous
% - find matching )]}*
:s/old/new/g - substitues 'new' for 'old' in a line
:%s/old/new/g - changes every occurrence in the whole file
:%s/old/new/gc - prompts whether to substitute or not
o - open a line below the cursor and place you in insert mode
a - insert text after the cursor
v - visual mode to highlight text
y - copy text
p - paste text

The File System:
man hier - manual of file system hierarchy
/ - root of the file system. everything is organized under root
bin - binaries
boot - bootloader, config, kernel
dev - device nodes (hard drives, sound card)
etc - system level config
home - user home directories
root - root's home directory
run - dynamic runtime data
sbin - system/superuser binaries
tmp - world writeable scratch space
usr - programs, libraries, docs
var - persistent variable data
absolute paths - denote full locations starting at root
relative paths - denotes locations relative to your current directory
	. - signify current folder
	.. - parent folder
pwd - display your current directory
~ - current user's home directory 
~user - specified user's home directory
cp - copy file
mv - move file (or rename)
rm - remove
touch - create empty file
mkdir - create directory
	-p create parent directories as needed
file globbing
	* 0 or more of any character
	? 1 of any character
	[...] - 1 of any character specified in the []
	[^..] - 1 of any character not in the []
softlink/symlink
	ln -s
		-v (verbose)
hard links - can only link to files on same file system
	ln <file> <link name>
cat - concatenate files and redirect output to console

Users and Groups:
Users - every process runs as a user. every filesystem object belongs to a user, every regular user has a /home direcotry which contains their data and preferences (in hidden .files). 
3 account types
	root (admin) - uid 0
	system - uids 1-200 & 201-999
	regular - uids 1000+
id <username> - information about user accounts
users - see logged in users
who - see logged in users with more detail
w - all the details
getent passwd <user> - query passwd database for user 
useradd <user> - create new user
passwd <user> - set user password. account is not active until a pw is set
/etc/skel - skeleton directory for how new home directories are created
usermod - command to modify users. usually used for changing groups
	usermod -aG users,wheel nuguru - append groups users and wheel add nuguru user
userdel - remove user
/etc/passwd - account info
	guru:x:1000:1000:A Cloud Guru:/home/guru:/bin/bash
	<account name>:<shadow passwords in /etc/shadow>:<user id>:<primary group id>:<comment/full name>:<home directory>:<login shell>
/etc/shadow - password hash file
	<account name>:<password info - algorithm, salt, pw hash>:<password ageing>
Groups - every process runs as a member of a group, every filesystem object belongs to a group, every gorup name maps to a unique gid. users get their own private group by default. groups manage shared access to files.
groups <user> - what groups you belong to 
groupadd <group name>
usermod -aG <group name> <user> - add to groups
groupdel <group name>
groupmod - change group id, change name, rarely used command
getent <group> - view groupDB entry
/etc/group - group info
	wheel:x:10:guru,wibble,hatguru
	<group name>:<shadow passwords>:<groupid>:<group members comma separated>
/etc/gshadow
	wheel:::guru,wibble,hatguru
	<group name>:<password hash, probably empty since group pwds aren't used>:<group admins>:<group members>
	
Privilege Escalation
root - local admin, go anywhere and do anything, root can destroy everything. Never use root as day to day login account. Use regular account and escalate as needed.
su - switch user 
su <user> -c CMD - to run cmd as user
tail -f /var/log/secure & - tail looks at the last 10 lines of a file. -f to follow file <file name> and & runs in the background. This is monitoring security logs. 
jobs - command to see running jobs
kill %<id> - end task
journalctl -t - similar to tail command. looks at security logs
visudo - edit the /etc/sudoers file
sudo CMD - run CMD as root. must be allowed in /etc/sudoers

Controlling user access
chage OPTIONS <user> - command to control password aging
/etc/shadow - contains the aging options
usermod -L <user> - lock users account
usermod -U <user> - unlock account
usermod -s /sbin/nologin <user> - set shell to no login, but can still use nonlogin services (mail, ftp)

Network authentication
authenticating over the network is complex, difficult to setup and easy to break.
authconfig - difficult command line
authconfig-tui - menu driven
authconfig-gtk - easiest gui

Managing File Access
File attributes
	every file belongs to at least 1 user and 1 group
	ls -l to view permissions
 -rwxrw-r-- 1 guru gurus 30076 May 15 15:32 afile
	<file type> - - regular file, d directory, l link, p named pipe, s socket, c character device b block device
file permissions - chmod <mode> <file>
	rwxrwxrwx
	(u)ser (g)roup (o)ther(everyone else)
	+ add, -remove, = set
	who how what
	ex: chmod a-x afile: remove the execute permissions from all 
	ex: chmod u=rwx,go-wx afile: user gets read write execute, remove write execute from groups and other
	ex: chmod -R a+X adirectory: recursively set execute on directories
	extra attributes
	link count
	owning user - chown <user> <file>
	owning group - chgrp <group> <file>
	file size
	last modification time
	file name
numerical permissions
	rwxr-xr-x
	111101101 - binary representation
	7, 5, 5 - 
	chmod 755 adirectory
	rw-r--r--
	110100100
	6, 4, 4
	chmod 644 afile
special permissions
	rwxrwxrw[t] - sticky bit, typically only set on a directory. items in directory may only be deleted by owner. tmp folder
	rwxrw[s]rwx - new objects in this directory inherit its group ownership
	rw[s]rwxrwx - suid set user identity. program runs as owner rather than caller
	setting special permissions
		chmod u+s, g+s, o+t adirectory
		rwxr-Sr-T - if the special bit is lowercase, there is also execute permissions. If its uppercase, there is no execute permission.
		numerically: chmod 3755 adir
default permissions 0666 files, 0777 folders
	umask - command to view or set users umask
	effective user defaults determined by subtracting the umask from defaults
POSIX ACLs
	Standard permissions are too basic
	getfacl <file> - command to see the access control list
	setfacl -m u:nuguru:rx afile - set the access control list, add user nuguru with read write
	POSIX ACL masks - limit maximum privileges for group owner, named users, named groups. mask calculated as union of above permissions
		setfacl -m m::rx afile - set the mask to read execute 
Default ACLs
	Only set on directories. New objects created in directory inherit default ACLs
		setfacl -Rm d:u:nuguru:rx - set acl of default type that gives user nuguru read execute. Recursive options to apply to all subfolders/files